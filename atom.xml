<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>echoMu</title>
  <icon>https://www.gravatar.com/avatar/b3fc17312645f8f777b12e4537c26410</icon>
  <subtitle>听风在鼓舞，还有我作伴</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://echomu.github.io/"/>
  <updated>2018-02-07T07:42:43.527Z</updated>
  <id>http://echomu.github.io/</id>
  
  <author>
    <name>echoMu</name>
    <email>xiaocaiyibin100@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>自定义View实践之圆形进度ProgressBar</title>
    <link href="http://echomu.github.io/2018/02/07/%E8%87%AA%E5%AE%9A%E4%B9%89View%E5%AE%9E%E8%B7%B5%E4%B9%8B%E5%9C%86%E5%BD%A2%E8%BF%9B%E5%BA%A6ProgressBar/"/>
    <id>http://echomu.github.io/2018/02/07/自定义View实践之圆形进度ProgressBar/</id>
    <published>2018-02-07T07:36:36.000Z</published>
    <updated>2018-02-07T07:42:43.527Z</updated>
    
    <content type="html"><![CDATA[<p>这是继承View类的一个自定义View。<br>为了实现一个带有进度文本的圆形ProgressBar，我们自定义开发一个RoundProgressBar。</p><p>&lt;!– more -&gt;</p><p>效果是这样的<br><img src="http://upload-images.jianshu.io/upload_images/817079-7b5fa86d50c91237.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="device-2017-02-24-165125.png"></p><p>1.新建一个ProgressBar类继承View类，复写其构造函数和onDraw函数；<br>2.在values中建立一个attrs.xml文件来存放自定义view的属性；<br>3.从xml文件中获取自定义的view类中的各个属性值；<br>4.同时对使用者提供set和get方法进行各个属性的设置；</p><p>首先要整理出我们需要的view的属性有哪些，我们定义了这些属性：</p><table><thead><tr><th>属性名称</th><th style="text-align:center">属性作用</th></tr></thead><tbody><tr><td>max</td><td style="text-align:center">最大进度</td></tr><tr><td>startAngle</td><td style="text-align:center">进度从圆环的哪个角度开始走</td></tr><tr><td>backColor</td><td style="text-align:center">圆环内部的填充色</td></tr><tr><td>roundColor</td><td style="text-align:center">圆环的颜色</td></tr><tr><td>roundProgressColor</td><td style="text-align:center">圆环进度的颜色</td></tr><tr><td>roundWidth</td><td style="text-align:center">圆环宽度</td></tr><tr><td>textColor</td><td style="text-align:center">中心文字的颜色</td></tr><tr><td>textSize</td><td style="text-align:center">中心文字的大小</td></tr><tr><td>textIsDisplayable</td><td style="text-align:center">中心文字是否显示</td></tr><tr><td>style = 0/1</td><td style="text-align:center">进度的风格，实心或者空心</td></tr></tbody></table><p>通过键值对的形式来存放键（name）：属性名，和值（format）：属性的类型（限制输入的类型），attrs.xml文件如下;</p><pre><code class="java">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;&lt;resources&gt;&lt;declare-styleable name=<span class="string">"RoundProgressBar"</span>&gt;    &lt;attr name="max" format="integer"&gt;&lt;/attr&gt;    &lt;attr name="startAngle" format="integer"&gt;&lt;/attr&gt;    &lt;attr name="backColor" format="color"&gt;&lt;/attr&gt;    &lt;attr name="roundColor" format="color"&gt;&lt;/attr&gt;    &lt;attr name="roundProgressColor" format="color"&gt;&lt;/attr&gt;    &lt;attr name="roundWidth" format="dimension"&gt;&lt;/attr&gt;    &lt;attr name="textColor" format="color"&gt;&lt;/attr&gt;    &lt;attr name="textSize" format="dimension"&gt;&lt;/attr&gt;    &lt;attr name="textIsDisplayable" format="boolean"&gt;&lt;/attr&gt;    &lt;attr name=<span class="string">"style"</span>&gt;        &lt;enum name="STROKE" value="0"&gt;&lt;/enum&gt;        &lt;enum name="FILL" value="1"&gt;&lt;/enum&gt;    &lt;/attr&gt;&lt;/declare-styleable&gt;&lt;/resources&gt;</code></pre><p>有了这些属性，我们就可以获取它们的值了，在ProgressBar类中的构造函数进行初始化工作，使用TypedArray，得到每一项属性的值：</p><pre><code>TypedArray mTypedArray = context.obtainStyledAttributes(attrs, R.styleable.RoundProgressBar);//获取自定义属性和默认值，第一个参数是从用户属性中得到的设置，如果用户没有设置，那么就用默认的属性，即：第二个参数//圆环的颜色roundColor = mTypedArray.getColor(R.styleable.RoundProgressBar_roundColor, Color.BLACK);//圆环进度的颜色roundProgressColor = mTypedArray.getColor(R.styleable.RoundProgressBar_roundProgressColor, Color.RED);//中间进度百分比的字符串的颜色textColor = mTypedArray.getColor(R.styleable.RoundProgressBar_textColor, Color.BLUE);//文字的大小textSize = mTypedArray.getDimension(R.styleable.RoundProgressBar_textSize, 24);//圆环的宽度roundWidth = mTypedArray.getDimension(R.styleable.RoundProgressBar_roundWidth, 4);//最大进度max = mTypedArray.getInteger(R.styleable.RoundProgressBar_max, 100);//是否显示中间的进度textIsDisplayable = mTypedArray.getBoolean(R.styleable.RoundProgressBar_textIsDisplayable, true);//进度的风格，实心或者空心style = mTypedArray.getInt(R.styleable.RoundProgressBar_style, 0);//进度开始的角度数startAngle = mTypedArray.getInt(R.styleable.RoundProgressBar_startAngle, -90);// 圆形颜色backColor = mTypedArray.getColor(R.styleable.RoundProgressBar_backColor, 0);//回收mTypedArray.recycle();</code></pre><p>一切准备工作做完，我们就可以在onDraw函数中开始绘制了：</p><pre><code>@Overrideprotected void onDraw(Canvas canvas) {    super.onDraw(canvas);    //进行绘制    //1.画最外层的大圆环    //获取圆心的x坐标    int centre = getWidth() / 2;    //圆环的半径    int radius = (int) (centre - roundWidth / 2);    //设置圆环的颜色    paint.setColor(roundColor);    //设置空心    paint.setStyle(Paint.Style.STROKE);    //设置圆环的宽度    paint.setStrokeWidth(roundWidth);    //消除锯齿    paint.setAntiAlias(true);    //画出圆环    canvas.drawCircle(centre, centre, radius, paint);    if (backColor != 0) {        paint.setColor(backColor);        paint.setStyle(Paint.Style.FILL);        canvas.drawCircle(centre, centre, radius, paint);    }    //画进度百分比字体    paint.setStrokeWidth(0);    paint.setColor(textColor);    paint.setTextSize(textSize);    paint.setTypeface(Typeface.DEFAULT_BOLD);    //中间的进度百分比，先转换成float在进行除法运算，不然都为0    int percent = (int) (((float) progress / (float) max) * 100);    //测量字体宽度，我们需要根据字体的宽度设置在圆环中间    float textWidth = paint.measureText(percent + &quot;%&quot;);    if (textIsDisplayable &amp;&amp; percent != 0 &amp;&amp; style == STROKE) {        //绘制文字        //宽 centre - textWidth / 2        //高 centre + textSize / 2        canvas.drawText(percent + &quot;%&quot;, centre - textWidth / 2, centre + textSize / 2, paint);    }    //画圆弧 ，圆环的进度    //设置圆环的宽度    paint.setStrokeWidth(roundWidth);    //设置进度的颜色    paint.setColor(roundProgressColor);    //用于定义的圆弧的形状和大小的界限    RectF oval = new RectF(centre - radius, centre - radius, centre            + radius, centre + radius);    switch (style) {        case STROKE: {            paint.setStyle(Paint.Style.STROKE);            /*第二个参数是进度开始的角度，-90表示从12点方向开始走进度，如果是0表示从三点钟方向走进度，依次类推             *public void drawArc(RectF oval, float startAngle, float sweepAngle, boolean useCenter, Paint paint)                oval :指定圆弧的外轮廓矩形区域。                startAngle: 圆弧起始角度，单位为度。                sweepAngle: 圆弧扫过的角度，顺时针方向，单位为度。                useCenter: 如果为True时，在绘制圆弧时将圆心包括在内，通常用来绘制扇形。                paint: 绘制圆弧的画板属性，如颜色，是否填充等             *            */            canvas.drawArc(oval, startAngle, 360 * progress / max, false, paint);  //根据进度画圆弧            break;        }        case FILL: {            paint.setStyle(Paint.Style.FILL_AND_STROKE);            if (progress != 0)                canvas.drawArc(oval, startAngle, 360 * progress / max, true, paint);  //根据进度画圆弧            break;        }    }}</code></pre><p>完成之后就可以使用它了，例如要这样的ProgressBar;</p><pre><code>&lt;TextView    android:layout_width=&quot;wrap_content&quot;    android:layout_height=&quot;wrap_content&quot;    android:text=&quot;无数字，环形&quot; /&gt;&lt;com.echomu.customsprogressbar.view.RoundProgressBar    android:id=&quot;@+id/rpb_04&quot;    android:layout_width=&quot;80dp&quot;    android:layout_height=&quot;80dp&quot;    android:layout_margin=&quot;8dp&quot;    app:startAngle=&quot;30&quot;    app:roundColor=&quot;#C6E2FF&quot;    app:roundWidth=&quot;10dip&quot;    app:roundProgressColor=&quot;#CD3333&quot;    app:textIsDisplayable=&quot;false&quot;/&gt;</code></pre><p><a href="https://github.com/mumubin5/CustomsProgressBar" target="_blank" rel="noopener">github版：Android 自定义View实践之圆形进度ProgressBar</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这是继承View类的一个自定义View。&lt;br&gt;为了实现一个带有进度文本的圆形ProgressBar，我们自定义开发一个RoundProgressBar。&lt;/p&gt;
&lt;p&gt;&amp;lt;!– more -&amp;gt;&lt;/p&gt;
&lt;p&gt;效果是这样的&lt;br&gt;&lt;img src=&quot;http://
      
    
    </summary>
    
    
      <category term="自定义View" scheme="http://echomu.github.io/tags/%E8%87%AA%E5%AE%9A%E4%B9%89View/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://echomu.github.io/2018/02/05/hello-world/"/>
    <id>http://echomu.github.io/2018/02/05/hello-world/</id>
    <published>2018-02-05T02:54:01.512Z</published>
    <updated>2018-02-07T06:58:20.417Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><a id="more"></a><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
