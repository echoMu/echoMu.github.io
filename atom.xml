<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>echoMu</title>
  <icon>https://www.gravatar.com/avatar/b3fc17312645f8f777b12e4537c26410</icon>
  <subtitle>听风在鼓舞，还有我作伴</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://echomu.github.io/"/>
  <updated>2018-02-07T08:03:18.787Z</updated>
  <id>http://echomu.github.io/</id>
  
  <author>
    <name>echoMu</name>
    <email>xiaocaiyibin100@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>自定义View实践之给图片加上水印（支持logo+文字）吧！</title>
    <link href="http://echomu.github.io/2017/08/01/%E8%87%AA%E5%AE%9A%E4%B9%89View%E5%AE%9E%E8%B7%B5%E4%B9%8B%E7%BB%99%E5%9B%BE%E7%89%87%E5%8A%A0%E4%B8%8A%E6%B0%B4%E5%8D%B0%EF%BC%88%E6%94%AF%E6%8C%81logo-%E6%96%87%E5%AD%97%EF%BC%89%E5%90%A7%EF%BC%81/"/>
    <id>http://echomu.github.io/2017/08/01/自定义View实践之给图片加上水印（支持logo-文字）吧！/</id>
    <published>2017-08-01T08:01:02.000Z</published>
    <updated>2018-02-07T08:03:18.787Z</updated>
    
    <content type="html"><![CDATA[<p>现在我们想要往图片上打上水印，该水印应符合这样的需求：</p><ol><li>支持logo+文字；</li><li>文字信息支持多行展示；</li><li>用户可以选择水印在图片上的生成位置（左上、右上、右下和左下）。</li></ol><p>粗略的界面结构图低配版大概就长这样…</p><p><img src="http://upload-images.jianshu.io/upload_images/817079-a023ab2dfc726bb8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="水印结构图.png"></p><p>现在提供这样的一种思路去实现这一个需求，我们可以通过自定义一个view，view的布局中包含logo、公司名称和相关信息，这个view就是我们要打上图片的水印。</p><p>这样的一个view其实是一个自定义组合布局，关于如何实现组合布局的自定义view，可以参考这篇文章：<a href="http://www.jianshu.com/p/d378523a00d9" target="_blank" rel="noopener">Android 自定义View实践之组合控件实现布局的复用</a></p><p>这个view用起来就是这样的简便粗暴，其它属性包括背景色、logo图标等也要能够支持设置。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">waterMaskView = <span class="keyword">new</span> WaterMaskView(<span class="keyword">this</span>);</span><br><span class="line">RelativeLayout.LayoutParams params = <span class="keyword">new</span> RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.WRAP_CONTENT, RelativeLayout.LayoutParams.WRAP_CONTENT);</span><br><span class="line">waterMaskView.setLayoutParams(params);</span><br><span class="line">waterMaskView.setCompanyText(<span class="string">"XXXXXX公司"</span>);</span><br><span class="line">waterMaskView.setInfoText(<span class="string">"这是相关信息1这是相关信息2这是相关信息3这是相关信息4这是相关信息5"</span>);</span><br></pre></td></tr></table></figure><p>有了水印的view之后，我们就可以利用以下这个方法，得到水印对应的view的Bitmap。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将一个view转换为Bitmap</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> view</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title">convertViewToBitmap</span><span class="params">(View view)</span></span>&#123;</span><br><span class="line">    view.measure(View.MeasureSpec.makeMeasureSpec(<span class="number">0</span>, View.MeasureSpec.UNSPECIFIED), View.MeasureSpec.makeMeasureSpec(<span class="number">0</span>, View.MeasureSpec.UNSPECIFIED));</span><br><span class="line">    view.layout(<span class="number">0</span>, <span class="number">0</span>, view.getMeasuredWidth(), view.getMeasuredHeight());</span><br><span class="line">    view.buildDrawingCache();</span><br><span class="line">    Bitmap bitmap = view.getDrawingCache();</span><br><span class="line">    <span class="keyword">return</span> bitmap;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>得到水印对应的view的Bitmap之后，我们处理一下尺寸，保持水印的尺寸在合理范围内。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据原图处理要生成的水印的宽高</span></span><br><span class="line">    <span class="keyword">float</span> width = sourBitmap.getWidth();</span><br><span class="line">    <span class="keyword">float</span> height = sourBitmap.getHeight();</span><br><span class="line">    <span class="keyword">float</span> be = width / height;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((<span class="keyword">float</span>) <span class="number">16</span> / <span class="number">9</span> &gt;= be &amp;&amp; be &gt;= (<span class="keyword">float</span>) <span class="number">4</span> / <span class="number">3</span>) &#123;</span><br><span class="line">        <span class="comment">//在图片比例区间内16;9~4：3内，将生成的水印bitmap设置为原图宽高各自的1/5</span></span><br><span class="line">        waterBitmap = WaterMaskUtil.zoomBitmap(waterBitmap, (<span class="keyword">int</span>) width / <span class="number">5</span>, (<span class="keyword">int</span>) height / <span class="number">5</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (be &gt; (<span class="keyword">float</span>) <span class="number">16</span> / <span class="number">9</span>) &#123;</span><br><span class="line">        <span class="comment">//生成4：3的水印</span></span><br><span class="line">        waterBitmap = WaterMaskUtil.zoomBitmap(waterBitmap, (<span class="keyword">int</span>) width / <span class="number">5</span>, (<span class="keyword">int</span>) width*<span class="number">3</span> / <span class="number">20</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (be &lt; (<span class="keyword">float</span>) <span class="number">4</span> / <span class="number">3</span>) &#123;</span><br><span class="line">        <span class="comment">//生成4：3的水印</span></span><br><span class="line">        waterBitmap = WaterMaskUtil.zoomBitmap(waterBitmap, (<span class="keyword">int</span>) height*<span class="number">4</span> / <span class="number">15</span>, (<span class="keyword">int</span>) height / <span class="number">5</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>然后将它按照要求绘制在原图上，提供生成左上、右上、右下和左下四个位置的水印各自的方法，关键代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置水印图片在左上角</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> src</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> watermark</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> paddingLeft</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> paddingTop</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title">createWaterMaskLeftTop</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">        Context context, Bitmap src, Bitmap watermark,</span></span></span><br><span class="line"><span class="function"><span class="params">        <span class="keyword">int</span> paddingLeft, <span class="keyword">int</span> paddingTop)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> createWaterMaskBitmap(src, watermark,</span><br><span class="line">            dp2px(context, paddingLeft), dp2px(context, paddingTop));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置水印图片在右下角</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> src</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> watermark</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> paddingRight</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> paddingBottom</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title">createWaterMaskRightBottom</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">        Context context, Bitmap src, Bitmap watermark,</span></span></span><br><span class="line"><span class="function"><span class="params">        <span class="keyword">int</span> paddingRight, <span class="keyword">int</span> paddingBottom)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> createWaterMaskBitmap(src, watermark,</span><br><span class="line">            src.getWidth() - watermark.getWidth() - dp2px(context, paddingRight),</span><br><span class="line">            src.getHeight() - watermark.getHeight() - dp2px(context, paddingBottom));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置水印图片到右上角</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> src</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> watermark</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> paddingRight</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> paddingTop</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title">createWaterMaskRightTop</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">        Context context, Bitmap src, Bitmap watermark,</span></span></span><br><span class="line"><span class="function"><span class="params">        <span class="keyword">int</span> paddingRight, <span class="keyword">int</span> paddingTop)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> createWaterMaskBitmap( src, watermark,</span><br><span class="line">            src.getWidth() - watermark.getWidth() - dp2px(context, paddingRight),</span><br><span class="line">            dp2px(context, paddingTop));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置水印图片到左下角</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> src</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> watermark</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> paddingLeft</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> paddingBottom</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title">createWaterMaskLeftBottom</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">        Context context, Bitmap src, Bitmap watermark,</span></span></span><br><span class="line"><span class="function"><span class="params">        <span class="keyword">int</span> paddingLeft, <span class="keyword">int</span> paddingBottom)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> createWaterMaskBitmap(src, watermark, dp2px(context, paddingLeft),</span><br><span class="line">            src.getHeight() - watermark.getHeight() - dp2px(context, paddingBottom));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 绘制水印图片</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> src 原图</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> watermark 水印</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> paddingLeft</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> paddingTop</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Bitmap <span class="title">createWaterMaskBitmap</span><span class="params">(Bitmap src, Bitmap watermark,</span></span></span><br><span class="line"><span class="function"><span class="params">                                            <span class="keyword">int</span> paddingLeft, <span class="keyword">int</span> paddingTop)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (src == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> width = src.getWidth();</span><br><span class="line">    <span class="keyword">int</span> height = src.getHeight();</span><br><span class="line">    <span class="comment">//创建一个bitmap</span></span><br><span class="line">    Bitmap newb = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);<span class="comment">// 创建一个新的和SRC长度宽度一样的位图</span></span><br><span class="line">    <span class="comment">//将该图片作为画布</span></span><br><span class="line">    Canvas canvas = <span class="keyword">new</span> Canvas(newb);</span><br><span class="line">    <span class="comment">//在画布 0，0坐标上开始绘制原始图片</span></span><br><span class="line">    canvas.drawBitmap(src, <span class="number">0</span>, <span class="number">0</span>, <span class="keyword">null</span>);</span><br><span class="line">    <span class="comment">//在画布上绘制水印图片</span></span><br><span class="line">    canvas.drawBitmap(watermark, paddingLeft, paddingTop, <span class="keyword">null</span>);</span><br><span class="line">    <span class="comment">// 保存</span></span><br><span class="line">    canvas.save(Canvas.ALL_SAVE_FLAG);</span><br><span class="line">    <span class="comment">// 存储</span></span><br><span class="line">    canvas.restore();</span><br><span class="line">    <span class="keyword">return</span> newb;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>绘制后的效果应该是这样的，欢迎拍砖~</p><p><img src="http://upload-images.jianshu.io/upload_images/817079-e31e704b7d9bc362.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="给图片加上水印.png"></p><p>附上源代码：<a href="https://github.com/echoMu/WaterMaskDemo" target="_blank" rel="noopener">github传送门</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;现在我们想要往图片上打上水印，该水印应符合这样的需求：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;支持logo+文字；&lt;/li&gt;
&lt;li&gt;文字信息支持多行展示；&lt;/li&gt;
&lt;li&gt;用户可以选择水印在图片上的生成位置（左上、右上、右下和左下）。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;粗略的界面结构图低
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>自定义View实践之组合控件实现布局的复用</title>
    <link href="http://echomu.github.io/2017/05/16/%E8%87%AA%E5%AE%9A%E4%B9%89View%E5%AE%9E%E8%B7%B5%E4%B9%8B%E7%BB%84%E5%90%88%E6%8E%A7%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%B8%83%E5%B1%80%E7%9A%84%E5%A4%8D%E7%94%A8/"/>
    <id>http://echomu.github.io/2017/05/16/自定义View实践之组合控件实现布局的复用/</id>
    <published>2017-05-16T07:59:03.000Z</published>
    <updated>2018-02-07T08:06:13.340Z</updated>
    
    <content type="html"><![CDATA[<p>看到很多项目会有实现自己的标题栏的做法，通常的界面是左边按钮或文字，加上中间的标题和右边的按钮或文字组成的。比较好的一种做法是使用include标签，复用同一个xml文件来实现布局的复用。但是这种方法是通过代码的方式来设置标题，左右按钮等其他的属性，会导致布局属性和Activity代码耦合性比较高。</p><p>因此，我们要通过自定义View，继承ViewGroup子类来实现这样的布局，降低布局文件和Activity代码耦合性。</p><ol><li>首先，我们需要写出布局文件layout_custom_titlebar.xml。</li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;merge xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span><br><span class="line">&lt;!-- 使用merge标签减少层级 --&gt;</span><br><span class="line">&lt;Button</span><br><span class="line">    android:id=<span class="string">"@+id/title_bar_left"</span></span><br><span class="line">    android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">    android:layout_alignParentLeft=<span class="string">"true"</span></span><br><span class="line">    android:layout_centerVertical=<span class="string">"true"</span></span><br><span class="line">    android:layout_marginLeft=<span class="string">"5dp"</span></span><br><span class="line">    android:background=<span class="string">"@null"</span></span><br><span class="line">    android:minHeight=<span class="string">"45dp"</span></span><br><span class="line">    android:minWidth=<span class="string">"45dp"</span></span><br><span class="line">    android:textSize=<span class="string">"14sp"</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;TextView</span><br><span class="line">    android:id=<span class="string">"@+id/title_bar_title"</span></span><br><span class="line">    android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">    android:layout_centerInParent=<span class="string">"true"</span></span><br><span class="line">    android:singleLine=<span class="string">"true"</span></span><br><span class="line">    android:textSize=<span class="string">"17sp"</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;Button</span><br><span class="line">    android:id=<span class="string">"@+id/title_bar_right"</span></span><br><span class="line">    android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">    android:layout_alignParentRight=<span class="string">"true"</span></span><br><span class="line">    android:layout_centerVertical=<span class="string">"true"</span></span><br><span class="line">    android:layout_marginRight=<span class="string">"7dp"</span></span><br><span class="line">    android:background=<span class="string">"@null"</span></span><br><span class="line">    android:minHeight=<span class="string">"45dp"</span></span><br><span class="line">    android:minWidth=<span class="string">"45dp"</span></span><br><span class="line">    android:textSize=<span class="string">"14sp"</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/merge&gt;</span><br></pre></td></tr></table></figure><p>2.定义自定义属性</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;declare-styleable name=<span class="string">"CustomTitleBar"</span>&gt;</span><br><span class="line">    &lt;!--标题栏背景色--&gt;</span><br><span class="line">    &lt;attr name=<span class="string">"title_background_color"</span> format=<span class="string">"reference|integer"</span> /&gt;</span><br><span class="line">    &lt;!--左边按钮是否可见--&gt;</span><br><span class="line">    &lt;attr name=<span class="string">"left_button_visible"</span> format=<span class="string">"boolean"</span> /&gt;</span><br><span class="line">    &lt;!--右边按钮是否可见--&gt;</span><br><span class="line">    &lt;attr name=<span class="string">"right_button_visible"</span> format=<span class="string">"boolean"</span> /&gt;</span><br><span class="line">    &lt;!--标题文字--&gt;</span><br><span class="line">    &lt;attr name=<span class="string">"title_text"</span> format=<span class="string">"string"</span> /&gt;</span><br><span class="line">    &lt;!--标题文字颜色--&gt;</span><br><span class="line">    &lt;attr name=<span class="string">"title_text_color"</span> format=<span class="string">"color"</span> /&gt;</span><br><span class="line">    &lt;!--标题文字图标--&gt;</span><br><span class="line">    &lt;attr name=<span class="string">"title_text_drawable"</span> format=<span class="string">"reference|integer"</span> /&gt;</span><br><span class="line">    &lt;!--左边按钮文字--&gt;</span><br><span class="line">    &lt;attr name=<span class="string">"left_button_text"</span> format=<span class="string">"string"</span> /&gt;</span><br><span class="line">    &lt;!--左边按钮文字颜色--&gt;</span><br><span class="line">    &lt;attr name=<span class="string">"left_button_text_color"</span> format=<span class="string">"color"</span> /&gt;</span><br><span class="line">    &lt;!--左边按钮图标--&gt;</span><br><span class="line">    &lt;attr name=<span class="string">"left_button_drawable"</span> format=<span class="string">"reference|integer"</span> /&gt;</span><br><span class="line">    &lt;!--右边按钮文字--&gt;</span><br><span class="line">    &lt;attr name=<span class="string">"right_button_text"</span> format=<span class="string">"string"</span> /&gt;</span><br><span class="line">    &lt;!--右边按钮文字颜色--&gt;</span><br><span class="line">    &lt;attr name=<span class="string">"right_button_text_color"</span> format=<span class="string">"color"</span> /&gt;</span><br><span class="line">    &lt;!--右边按钮图标--&gt;</span><br><span class="line">    &lt;attr name=<span class="string">"right_button_drawable"</span> format=<span class="string">"reference|integer"</span> /&gt;</span><br><span class="line">&lt;/declare-styleable&gt;</span><br></pre></td></tr></table></figure><p>3.自定义一个View继承ViewGroup子类，这里我们继承RelativeLayout。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomTitleBar</span> <span class="keyword">extends</span> <span class="title">RelativeLayout</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> Button titleBarLeftBtn;</span><br><span class="line"><span class="keyword">private</span> Button titleBarRightBtn;</span><br><span class="line"><span class="keyword">private</span> TextView titleBarTitle;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">CustomTitleBar</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>(context);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">CustomTitleBar</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>(context, attrs);</span><br><span class="line"></span><br><span class="line">    LayoutInflater.from(context).inflate(R.layout.layout_custom_titlebar,<span class="keyword">this</span>,<span class="keyword">true</span>);</span><br><span class="line">    titleBarLeftBtn = (Button) findViewById(R.id.title_bar_left);</span><br><span class="line">    titleBarRightBtn = (Button) findViewById(R.id.title_bar_right);</span><br><span class="line">    titleBarTitle = (TextView) findViewById(R.id.title_bar_title);</span><br><span class="line"></span><br><span class="line">    TypedArray typedArray=context.obtainStyledAttributes(attrs,R.styleable.CustomTitleBar);</span><br><span class="line">    <span class="keyword">if</span>(typedArray!=<span class="keyword">null</span>)&#123;</span><br><span class="line">        <span class="comment">//titleBar背景色</span></span><br><span class="line">        <span class="keyword">int</span> titleBarBackGround=typedArray.getResourceId(R.styleable.CustomTitleBar_title_background_color, Color.BLUE);</span><br><span class="line">        setBackgroundColor(titleBarBackGround);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取是否要显示左边按钮</span></span><br><span class="line">        <span class="keyword">boolean</span> leftButtonVisible = typedArray.getBoolean(R.styleable.CustomTitleBar_left_button_visible, <span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">if</span> (leftButtonVisible) &#123;</span><br><span class="line">            titleBarLeftBtn.setVisibility(View.VISIBLE);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            titleBarLeftBtn.setVisibility(View.INVISIBLE);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//设置左边按钮的文字</span></span><br><span class="line">        String leftButtonText = typedArray.getString(R.styleable.CustomTitleBar_left_button_text);</span><br><span class="line">        <span class="keyword">if</span> (!TextUtils.isEmpty(leftButtonText)) &#123;</span><br><span class="line">            titleBarLeftBtn.setText(leftButtonText);</span><br><span class="line">            <span class="comment">//设置左边按钮文字颜色</span></span><br><span class="line">            <span class="keyword">int</span> leftButtonTextColor = typedArray.getColor(R.styleable.CustomTitleBar_left_button_text_color, Color.WHITE);</span><br><span class="line">            titleBarLeftBtn.setTextColor(leftButtonTextColor);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//设置左边图片icon 这里是二选一 要么只能是文字 要么只能是图片</span></span><br><span class="line">            <span class="keyword">int</span> leftButtonDrawable = typedArray.getResourceId(R.styleable.CustomTitleBar_left_button_drawable, R.mipmap.titlebar_back_icon);</span><br><span class="line">            <span class="keyword">if</span> (leftButtonDrawable != -<span class="number">1</span>) &#123;</span><br><span class="line">                titleBarLeftBtn.setBackgroundResource(leftButtonDrawable);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//先获取标题是否要显示图片icon</span></span><br><span class="line">        <span class="keyword">int</span> titleTextDrawable = typedArray.getResourceId(R.styleable.CustomTitleBar_title_text_drawable, -<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (titleTextDrawable != -<span class="number">1</span>) &#123;</span><br><span class="line">            titleBarTitle.setBackgroundResource(titleTextDrawable);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//如果不是图片标题 则获取文字标题</span></span><br><span class="line">            String titleText = typedArray.getString(R.styleable.CustomTitleBar_title_text);</span><br><span class="line">            <span class="keyword">if</span> (!TextUtils.isEmpty(titleText)) &#123;</span><br><span class="line">                titleBarTitle.setText(titleText);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//获取标题显示颜色</span></span><br><span class="line">            <span class="keyword">int</span> titleTextColor = typedArray.getColor(R.styleable.CustomTitleBar_title_text_color, Color.WHITE);</span><br><span class="line">            titleBarTitle.setTextColor(titleTextColor);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取是否要显示右边按钮</span></span><br><span class="line">        <span class="keyword">boolean</span> rightButtonVisible = typedArray.getBoolean(R.styleable.CustomTitleBar_right_button_visible, <span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">if</span> (rightButtonVisible) &#123;</span><br><span class="line">            titleBarRightBtn.setVisibility(View.VISIBLE);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            titleBarRightBtn.setVisibility(View.INVISIBLE);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//设置右边按钮的文字</span></span><br><span class="line">        String rightButtonText = typedArray.getString(R.styleable.CustomTitleBar_right_button_text);</span><br><span class="line">        <span class="keyword">if</span> (!TextUtils.isEmpty(rightButtonText)) &#123;</span><br><span class="line">            titleBarRightBtn.setText(rightButtonText);</span><br><span class="line">            <span class="comment">//设置右边按钮文字颜色</span></span><br><span class="line">            <span class="keyword">int</span> rightButtonTextColor = typedArray.getColor(R.styleable.CustomTitleBar_right_button_text_color, Color.BLUE);</span><br><span class="line">            titleBarRightBtn.setTextColor(rightButtonTextColor);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//设置右边图片icon 这里是二选一 要么只能是文字 要么只能是图片</span></span><br><span class="line">            <span class="keyword">int</span> rightButtonDrawable = typedArray.getResourceId(R.styleable.CustomTitleBar_right_button_drawable, -<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (rightButtonDrawable != -<span class="number">1</span>) &#123;</span><br><span class="line">                titleBarRightBtn.setBackgroundResource(rightButtonDrawable);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        typedArray.recycle();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTitleClickListener</span><span class="params">(OnClickListener onClickListener)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (onClickListener != <span class="keyword">null</span>) &#123;</span><br><span class="line">        titleBarLeftBtn.setOnClickListener(onClickListener);</span><br><span class="line">        titleBarRightBtn.setOnClickListener(onClickListener);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Button <span class="title">getTitleBarLeftBtn</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> titleBarLeftBtn;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Button <span class="title">getTitleBarRightBtn</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> titleBarRightBtn;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> TextView <span class="title">getTitleBarTitle</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> titleBarTitle;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.正确地使用它</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;LinearLayout xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">xmlns:app=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">android:orientation=<span class="string">"vertical"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;com.mumubin.demoproject.view.CustomTitleBar</span><br><span class="line">    android:id=<span class="string">"@+id/ctb_view"</span></span><br><span class="line">    android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">    android:layout_height=<span class="string">"45dp"</span></span><br><span class="line">    app:right_button_drawable=<span class="string">"@mipmap/sure"</span></span><br><span class="line">    app:title_text=<span class="string">"@string/app_name"</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;com.mumubin.demoproject.view.CustomTitleBar</span><br><span class="line">    android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">    android:layout_height=<span class="string">"45dp"</span></span><br><span class="line">    android:layout_marginTop=<span class="string">"4dp"</span></span><br><span class="line">    app:title_background_color=<span class="string">"@color/colorPrimary"</span></span><br><span class="line">    app:title_text=<span class="string">"@string/app_name"</span></span><br><span class="line">    app:title_text_color=<span class="string">"@color/colorAccent"</span></span><br><span class="line">    app:left_button_text=<span class="string">"左边"</span></span><br><span class="line">    app:right_button_text=<span class="string">"右边"</span>/&gt;</span><br><span class="line"></span><br><span class="line">&lt;com.mumubin.demoproject.view.CustomTitleBar</span><br><span class="line">    android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">    android:layout_height=<span class="string">"45dp"</span></span><br><span class="line">    android:layout_marginTop=<span class="string">"4dp"</span></span><br><span class="line">    app:title_text_drawable=<span class="string">"@mipmap/ic_launcher"</span></span><br><span class="line">    app:title_background_color=<span class="string">"@color/colorAccent"</span></span><br><span class="line">    app:left_button_text=<span class="string">"左边"</span></span><br><span class="line">    app:right_button_text=<span class="string">"右边"</span>/&gt;</span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/817079-5f5a84081f8b69ca.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="titlebar.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;看到很多项目会有实现自己的标题栏的做法，通常的界面是左边按钮或文字，加上中间的标题和右边的按钮或文字组成的。比较好的一种做法是使用include标签，复用同一个xml文件来实现布局的复用。但是这种方法是通过代码的方式来设置标题，左右按钮等其他的属性，会导致布局属性和Acti
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>自定义View实践之EditText字数的简单计数器</title>
    <link href="http://echomu.github.io/2017/02/27/%E8%87%AA%E5%AE%9A%E4%B9%89View%E5%AE%9E%E8%B7%B5%E4%B9%8BEditText%E5%AD%97%E6%95%B0%E7%9A%84%E7%AE%80%E5%8D%95%E8%AE%A1%E6%95%B0%E5%99%A8/"/>
    <id>http://echomu.github.io/2017/02/27/自定义View实践之EditText字数的简单计数器/</id>
    <published>2017-02-27T07:51:33.000Z</published>
    <updated>2018-02-07T08:06:26.669Z</updated>
    
    <content type="html"><![CDATA[<p>这是继承View类的子类来实现自定义View的例子。</p><p>写一个类似于微博的140字限制的简单文本计算器，实现的思路是继承TextView,绑定一个EditText，通过添加EditText的addTextChangedListener，对调用者提供当前自定义View的回调接口，实现超出字数的回调。</p><p>自定义属性如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">  &lt;resources&gt;</span><br><span class="line">    &lt;declare-styleable name=<span class="string">"CountCharTextView"</span>&gt;</span><br><span class="line">      &lt;!--用户可输入的最大字数--&gt;</span><br><span class="line">      &lt;attr name="maxChars" format="integer"&gt;&lt;/attr&gt;</span><br><span class="line">      &lt;!--溢出字数提示--&gt;</span><br><span class="line">      &lt;attr name="exceedTextColor" format="color"&gt;&lt;/attr&gt;</span><br><span class="line">    &lt;/declare-styleable&gt;</span><br><span class="line">  &lt;/resources&gt;</span><br></pre></td></tr></table></figure><p>继承TextView，实现以下CountCharTextView：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 文本字数的简单计算器</span></span><br><span class="line"><span class="comment"> * Created by echoMu on 2017/2/27.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CountCharTextView</span> <span class="keyword">extends</span> <span class="title">TextView</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">int</span> maxChars;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">int</span> defaultMaxChars = <span class="number">500</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">int</span> exceedTextColor;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">int</span> defaultTextColor = Color.BLACK;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> CountCharChangedListener listener;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CountCharChangedListener</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">onCountChanged</span><span class="params">(<span class="keyword">int</span> countRemaining, <span class="keyword">boolean</span> hasExceededLimit)</span></span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">CountCharTextView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>(context, <span class="keyword">null</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">CountCharTextView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>(context, attrs, <span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">CountCharTextView</span><span class="params">(Context context, AttributeSet attrs, <span class="keyword">int</span> defStyleAttr)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>(context, attrs, defStyleAttr);</span><br><span class="line"></span><br><span class="line">    init(context, attrs);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">    setText(String.valueOf(maxLength));</span><br><span class="line"></span><br><span class="line">    TypedArray t = context.obtainStyledAttributes(attrs, R.styleable.CountCharTextView);</span><br><span class="line">    exceedTextColor = t.getColor(R.styleable.CountCharTextView_exceedTextColor, Color.RED);</span><br><span class="line">    maxChars = t.getInteger(R.styleable.CountCharTextView_maxChars, defaultMaxChars);</span><br><span class="line"></span><br><span class="line">    t.recycle();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEditText</span><span class="params">(EditText targetEt)</span> </span>&#123;</span><br><span class="line">    targetEt.addTextChangedListener(<span class="keyword">new</span> TextWatcher() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">beforeTextChanged</span><span class="params">(CharSequence charSequence, <span class="keyword">int</span> i, <span class="keyword">int</span> i1, <span class="keyword">int</span> i2)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onTextChanged</span><span class="params">(CharSequence charSequence, <span class="keyword">int</span> i, <span class="keyword">int</span> i1, <span class="keyword">int</span> i2)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterTextChanged</span><span class="params">(Editable editable)</span> </span>&#123;</span><br><span class="line">            String inputText = editable.toString();</span><br><span class="line">            <span class="keyword">int</span> leftChars = maxChars - inputText.length();</span><br><span class="line">            <span class="keyword">boolean</span> hasExceeded = inputText.length() &gt; maxChars;</span><br><span class="line"><span class="comment">//                if (leftChars &lt;= (Math.round(maxChars * 0.1))) &#123;</span></span><br><span class="line">            <span class="comment">//剩下10%的字数，变色提示</span></span><br><span class="line">            <span class="keyword">if</span> (leftChars &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">//达到最大字数限制，变色提示</span></span><br><span class="line">                setTextColor(exceedTextColor);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                setTextColor(defaultTextColor);</span><br><span class="line">            &#125;</span><br><span class="line">            setText(String.valueOf(leftChars));</span><br><span class="line">            <span class="keyword">if</span> (listener != <span class="keyword">null</span>) &#123;</span><br><span class="line">                listener.onCountChanged(leftChars, hasExceeded);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> NullPointerException(<span class="string">"A CountCharChangedListener has not been set!"</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCharCountChangedListener</span><span class="params">(CountCharChangedListener listener)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.listener = listener;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getMaxChars</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> maxChars;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置最大输入字符</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> maxChars</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMaxChars</span><span class="params">(<span class="keyword">int</span> maxChars)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.maxChars = maxChars;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getExceedTextColor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> exceedTextColor;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置溢出字符数文本颜色</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> exceedTextColor</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setExceedTextColor</span><span class="params">(<span class="keyword">int</span> exceedTextColor)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.exceedTextColor = exceedTextColor;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这是继承View类的子类来实现自定义View的例子。&lt;/p&gt;
&lt;p&gt;写一个类似于微博的140字限制的简单文本计算器，实现的思路是继承TextView,绑定一个EditText，通过添加EditText的addTextChangedListener，对调用者提供当前自定义Vi
      
    
    </summary>
    
    
      <category term="自定义View" scheme="http://echomu.github.io/tags/%E8%87%AA%E5%AE%9A%E4%B9%89View/"/>
    
  </entry>
  
  <entry>
    <title>自定义View实践之圆形进度ProgressBar</title>
    <link href="http://echomu.github.io/2017/02/24/%E8%87%AA%E5%AE%9A%E4%B9%89View%E5%AE%9E%E8%B7%B5%E4%B9%8B%E5%9C%86%E5%BD%A2%E8%BF%9B%E5%BA%A6ProgressBar/"/>
    <id>http://echomu.github.io/2017/02/24/自定义View实践之圆形进度ProgressBar/</id>
    <published>2017-02-24T07:36:36.000Z</published>
    <updated>2018-02-07T07:55:52.075Z</updated>
    
    <content type="html"><![CDATA[<p>这是继承View类的一个自定义View。<br>为了实现一个带有进度文本的圆形ProgressBar，我们自定义开发一个RoundProgressBar。</p><a id="more"></a><p>效果是这样的<br><img src="http://upload-images.jianshu.io/upload_images/817079-7b5fa86d50c91237.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="device-2017-02-24-165125.png"></p><p>1.新建一个ProgressBar类继承View类，复写其构造函数和onDraw函数；<br>2.在values中建立一个attrs.xml文件来存放自定义view的属性；<br>3.从xml文件中获取自定义的view类中的各个属性值；<br>4.同时对使用者提供set和get方法进行各个属性的设置；</p><p>首先要整理出我们需要的view的属性有哪些，我们定义了这些属性：</p><table><thead><tr><th>属性名称</th><th style="text-align:center">属性作用</th></tr></thead><tbody><tr><td>max</td><td style="text-align:center">最大进度</td></tr><tr><td>startAngle</td><td style="text-align:center">进度从圆环的哪个角度开始走</td></tr><tr><td>backColor</td><td style="text-align:center">圆环内部的填充色</td></tr><tr><td>roundColor</td><td style="text-align:center">圆环的颜色</td></tr><tr><td>roundProgressColor</td><td style="text-align:center">圆环进度的颜色</td></tr><tr><td>roundWidth</td><td style="text-align:center">圆环宽度</td></tr><tr><td>textColor</td><td style="text-align:center">中心文字的颜色</td></tr><tr><td>textSize</td><td style="text-align:center">中心文字的大小</td></tr><tr><td>textIsDisplayable</td><td style="text-align:center">中心文字是否显示</td></tr><tr><td>style = 0/1</td><td style="text-align:center">进度的风格，实心或者空心</td></tr></tbody></table><p>通过键值对的形式来存放键（name）：属性名，和值（format）：属性的类型（限制输入的类型），attrs.xml文件如下;</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;resources&gt;</span><br><span class="line">&lt;declare-styleable name=<span class="string">"RoundProgressBar"</span>&gt;</span><br><span class="line">    &lt;attr name="max" format="integer"&gt;&lt;/attr&gt;</span><br><span class="line">    &lt;attr name="startAngle" format="integer"&gt;&lt;/attr&gt;</span><br><span class="line">    &lt;attr name="backColor" format="color"&gt;&lt;/attr&gt;</span><br><span class="line">    &lt;attr name="roundColor" format="color"&gt;&lt;/attr&gt;</span><br><span class="line">    &lt;attr name="roundProgressColor" format="color"&gt;&lt;/attr&gt;</span><br><span class="line">    &lt;attr name="roundWidth" format="dimension"&gt;&lt;/attr&gt;</span><br><span class="line">    &lt;attr name="textColor" format="color"&gt;&lt;/attr&gt;</span><br><span class="line">    &lt;attr name="textSize" format="dimension"&gt;&lt;/attr&gt;</span><br><span class="line">    &lt;attr name="textIsDisplayable" format="boolean"&gt;&lt;/attr&gt;</span><br><span class="line">    &lt;attr name=<span class="string">"style"</span>&gt;</span><br><span class="line">        &lt;enum name="STROKE" value="0"&gt;&lt;/enum&gt;</span><br><span class="line">        &lt;enum name="FILL" value="1"&gt;&lt;/enum&gt;</span><br><span class="line">    &lt;/attr&gt;</span><br><span class="line">&lt;/declare-styleable&gt;</span><br><span class="line">&lt;/resources&gt;</span><br></pre></td></tr></table></figure><p>有了这些属性，我们就可以获取它们的值了，在ProgressBar类中的构造函数进行初始化工作，使用TypedArray，得到每一项属性的值：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">TypedArray mTypedArray = context.obtainStyledAttributes(attrs, R.styleable.RoundProgressBar);</span><br><span class="line"><span class="comment">//获取自定义属性和默认值，第一个参数是从用户属性中得到的设置，如果用户没有设置，那么就用默认的属性，即：第二个参数</span></span><br><span class="line"><span class="comment">//圆环的颜色</span></span><br><span class="line">roundColor = mTypedArray.getColor(R.styleable.RoundProgressBar_roundColor, Color.BLACK);</span><br><span class="line"><span class="comment">//圆环进度的颜色</span></span><br><span class="line">roundProgressColor = mTypedArray.getColor(R.styleable.RoundProgressBar_roundProgressColor, Color.RED);</span><br><span class="line"><span class="comment">//中间进度百分比的字符串的颜色</span></span><br><span class="line">textColor = mTypedArray.getColor(R.styleable.RoundProgressBar_textColor, Color.BLUE);</span><br><span class="line"><span class="comment">//文字的大小</span></span><br><span class="line">textSize = mTypedArray.getDimension(R.styleable.RoundProgressBar_textSize, <span class="number">24</span>);</span><br><span class="line"><span class="comment">//圆环的宽度</span></span><br><span class="line">roundWidth = mTypedArray.getDimension(R.styleable.RoundProgressBar_roundWidth, <span class="number">4</span>);</span><br><span class="line"><span class="comment">//最大进度</span></span><br><span class="line">max = mTypedArray.getInteger(R.styleable.RoundProgressBar_max, <span class="number">100</span>);</span><br><span class="line"><span class="comment">//是否显示中间的进度</span></span><br><span class="line">textIsDisplayable = mTypedArray.getBoolean(R.styleable.RoundProgressBar_textIsDisplayable, <span class="keyword">true</span>);</span><br><span class="line"><span class="comment">//进度的风格，实心或者空心</span></span><br><span class="line">style = mTypedArray.getInt(R.styleable.RoundProgressBar_style, <span class="number">0</span>);</span><br><span class="line"><span class="comment">//进度开始的角度数</span></span><br><span class="line">startAngle = mTypedArray.getInt(R.styleable.RoundProgressBar_startAngle, -<span class="number">90</span>);</span><br><span class="line"><span class="comment">// 圆形颜色</span></span><br><span class="line">backColor = mTypedArray.getColor(R.styleable.RoundProgressBar_backColor, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//回收</span></span><br><span class="line">mTypedArray.recycle();</span><br></pre></td></tr></table></figure><p>一切准备工作做完，我们就可以在onDraw函数中开始绘制了：</p><pre><code class="java"><span class="meta">@Override</span><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>{    <span class="keyword">super</span>.onDraw(canvas);    <span class="comment">//进行绘制</span>    <span class="comment">//1.画最外层的大圆环</span>    <span class="comment">//获取圆心的x坐标</span>    <span class="keyword">int</span> centre = getWidth() / <span class="number">2</span>;    <span class="comment">//圆环的半径</span>    <span class="keyword">int</span> radius = (<span class="keyword">int</span>) (centre - roundWidth / <span class="number">2</span>);    <span class="comment">//设置圆环的颜色</span>    paint.setColor(roundColor);    <span class="comment">//设置空心</span>    paint.setStyle(Paint.Style.STROKE);    <span class="comment">//设置圆环的宽度</span>    paint.setStrokeWidth(roundWidth);    <span class="comment">//消除锯齿</span>    paint.setAntiAlias(<span class="keyword">true</span>);    <span class="comment">//画出圆环</span>    canvas.drawCircle(centre, centre, radius, paint);    <span class="keyword">if</span> (backColor != <span class="number">0</span>) {        paint.setColor(backColor);        paint.setStyle(Paint.Style.FILL);        canvas.drawCircle(centre, centre, radius, paint);    }    <span class="comment">//画进度百分比字体</span>    paint.setStrokeWidth(<span class="number">0</span>);    paint.setColor(textColor);    paint.setTextSize(textSize);    paint.setTypeface(Typeface.DEFAULT_BOLD);    <span class="comment">//中间的进度百分比，先转换成float在进行除法运算，不然都为0</span>    <span class="keyword">int</span> percent = (<span class="keyword">int</span>) (((<span class="keyword">float</span>) progress / (<span class="keyword">float</span>) max) * <span class="number">100</span>);    <span class="comment">//测量字体宽度，我们需要根据字体的宽度设置在圆环中间</span>    <span class="keyword">float</span> textWidth = paint.measureText(percent + <span class="string">"%"</span>);    <span class="keyword">if</span> (textIsDisplayable &amp;&amp; percent != <span class="number">0</span> &amp;&amp; style == STROKE) {        <span class="comment">//绘制文字</span>        <span class="comment">//宽 centre - textWidth / 2</span>        <span class="comment">//高 centre + textSize / 2</span>        canvas.drawText(percent + <span class="string">"%"</span>, centre - textWidth / <span class="number">2</span>, centre + textSize / <span class="number">2</span>, paint);    }    <span class="comment">//画圆弧 ，圆环的进度</span>    <span class="comment">//设置圆环的宽度</span>    paint.setStrokeWidth(roundWidth);    <span class="comment">//设置进度的颜色</span>    paint.setColor(roundProgressColor);    <span class="comment">//用于定义的圆弧的形状和大小的界限</span>    RectF oval = <span class="keyword">new</span> RectF(centre - radius, centre - radius, centre            + radius, centre + radius);    <span class="keyword">switch</span> (style) {        <span class="keyword">case</span> STROKE: {            paint.setStyle(Paint.Style.STROKE);            <span class="comment">/*第二个参数是进度开始的角度，-90表示从12点方向开始走进度，如果是0表示从三点钟方向走进度，依次类推</span><span class="comment">             *public void drawArc(RectF oval, float startAngle, float sweepAngle, boolean useCenter, Paint paint)</span><span class="comment">                oval :指定圆弧的外轮廓矩形区域。</span><span class="comment">                startAngle: 圆弧起始角度，单位为度。</span><span class="comment">                sweepAngle: 圆弧扫过的角度，顺时针方向，单位为度。</span><span class="comment">                useCenter: 如果为True时，在绘制圆弧时将圆心包括在内，通常用来绘制扇形。</span><span class="comment">                paint: 绘制圆弧的画板属性，如颜色，是否填充等</span><span class="comment">             *</span><span class="comment">            */</span>            canvas.drawArc(oval, startAngle, <span class="number">360</span> * progress / max, <span class="keyword">false</span>, paint);  <span class="comment">//根据进度画圆弧</span>            <span class="keyword">break</span>;        }        <span class="keyword">case</span> FILL: {            paint.setStyle(Paint.Style.FILL_AND_STROKE);            <span class="keyword">if</span> (progress != <span class="number">0</span>)                canvas.drawArc(oval, startAngle, <span class="number">360</span> * progress / max, <span class="keyword">true</span>, paint);  <span class="comment">//根据进度画圆弧</span>            <span class="keyword">break</span>;        }    }}</code></pre><p>完成之后就可以使用它了，例如要这样的ProgressBar;</p><pre><code class="java">&lt;TextView    android:layout_width=<span class="string">"wrap_content"</span>    android:layout_height=<span class="string">"wrap_content"</span>    android:text=<span class="string">"无数字，环形"</span> /&gt;&lt;com.echomu.customsprogressbar.view.RoundProgressBar    android:id=<span class="string">"@+id/rpb_04"</span>    android:layout_width=<span class="string">"80dp"</span>    android:layout_height=<span class="string">"80dp"</span>    android:layout_margin=<span class="string">"8dp"</span>    app:startAngle=<span class="string">"30"</span>    app:roundColor=<span class="string">"#C6E2FF"</span>    app:roundWidth=<span class="string">"10dip"</span>    app:roundProgressColor=<span class="string">"#CD3333"</span>    app:textIsDisplayable=<span class="string">"false"</span>/&gt;</code></pre><p><a href="https://github.com/mumubin5/CustomsProgressBar" target="_blank" rel="noopener">github版：Android 自定义View实践之圆形进度ProgressBar</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是继承View类的一个自定义View。&lt;br&gt;为了实现一个带有进度文本的圆形ProgressBar，我们自定义开发一个RoundProgressBar。&lt;/p&gt;
    
    </summary>
    
    
      <category term="自定义View" scheme="http://echomu.github.io/tags/%E8%87%AA%E5%AE%9A%E4%B9%89View/"/>
    
  </entry>
  
</feed>
